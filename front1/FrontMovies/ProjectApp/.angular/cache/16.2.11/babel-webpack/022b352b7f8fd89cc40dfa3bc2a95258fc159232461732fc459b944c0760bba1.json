{"ast":null,"code":"import { Component, Injectable } from '@angular/core';\nimport { RoleEnum } from 'src/app/models/userEnums.model';\nimport * as i0 from \"@angular/core\";\nexport class NavBarComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  // private cdr: ChangeDetectorRef;\n  ngOnInit() {\n    this.authService.userState.subscribe(result => {\n      if (result != null) {\n        this.role = result.role;\n      } else {\n        this.role = RoleEnum.UNAUTHENTICATED;\n      }\n      // this.cdr.detectChanges();\n    });\n  }\n\n  logout() {\n    console.log(\"LOG OUT \");\n    this.authService.logout();\n  }\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n  isAdmin() {\n    console.log(\"USAO U IS ADM\");\n    console.log('ROLA JE ', this.role);\n    return this.authService.getRole() == RoleEnum.ADMIN;\n  }\n  isGuest() {\n    return this.authService.getRole() == RoleEnum.GUEST;\n  }\n  isOwner() {\n    return this.authService.getRole() == RoleEnum.OWNER;\n  }\n  static #_ = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavBarComponent,\n    factory: NavBarComponent.ɵfac\n  });\n}","map":{"version":3,"names":["Component","Injectable","RoleEnum","NavBarComponent","constructor","authService","ngOnInit","userState","subscribe","result","role","UNAUTHENTICATED","logout","console","log","isLoggedIn","isAdmin","getRole","ADMIN","isGuest","GUEST","isOwner","OWNER","_","factory","ɵfac"],"sources":["C:\\Users\\USER\\Desktop\\FrontMovies\\ProjectApp\\src\\app\\layout\\nav-bar\\nav-bar.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, Injectable, NgZone } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { RoleEnum } from 'src/app/models/userEnums.model';\r\nimport { UserGetDTO } from 'src/app/models/userGetDTO.model';\r\nimport { UserService } from 'src/app/user.service';\r\nimport { environment } from 'src/env/env';\r\n\r\n@Injectable()\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent {\r\n  constructor(private authService: AuthService) {}\r\n  user:UserGetDTO;\r\n  role: RoleEnum ;\r\n // private cdr: ChangeDetectorRef;\r\n  \r\n  \r\n  ngOnInit(): void {\r\n \r\n  \r\n    this.authService.userState.subscribe((result) => {\r\n      if(result != null){\r\n        this.role = result.role;\r\n      }else{\r\n       this.role=RoleEnum.UNAUTHENTICATED;\r\n      }\r\n     // this.cdr.detectChanges();\r\n    })\r\n  }\r\n\r\n  logout(): void {\r\n    console.log(\"LOG OUT \")\r\n    this.authService.logout();\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    console.log(\"USAO U IS ADM\")\r\n    console.log('ROLA JE ', this.role)\r\n \r\n    return this.authService.getRole() == RoleEnum.ADMIN;\r\n  }\r\n\r\n  isGuest(): boolean {\r\n    return this.authService.getRole() == RoleEnum.GUEST;\r\n  }\r\n\r\n  isOwner(): boolean {\r\n    return this.authService.getRole() == RoleEnum.OWNER;\r\n  }\r\n  \r\n\r\n }\r\n \r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAA4BA,SAAS,EAAEC,UAAU,QAAgB,eAAe;AAGhF,SAASC,QAAQ,QAAQ,gCAAgC;;AAWzD,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAGhD;EAGCC,QAAQA,CAAA;IAGN,IAAI,CAACD,WAAW,CAACE,SAAS,CAACC,SAAS,CAAEC,MAAM,IAAI;MAC9C,IAAGA,MAAM,IAAI,IAAI,EAAC;QAChB,IAAI,CAACC,IAAI,GAAGD,MAAM,CAACC,IAAI;OACxB,MAAI;QACJ,IAAI,CAACA,IAAI,GAACR,QAAQ,CAACS,eAAe;;MAEpC;IACD,CAAC,CAAC;EACJ;;EAEAC,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAI,CAACT,WAAW,CAACO,MAAM,EAAE;EAC3B;EAEAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACV,WAAW,CAACU,UAAU,EAAE;EACtC;EAEAC,OAAOA,CAAA;IACLH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACJ,IAAI,CAAC;IAElC,OAAO,IAAI,CAACL,WAAW,CAACY,OAAO,EAAE,IAAIf,QAAQ,CAACgB,KAAK;EACrD;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACd,WAAW,CAACY,OAAO,EAAE,IAAIf,QAAQ,CAACkB,KAAK;EACrD;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAAChB,WAAW,CAACY,OAAO,EAAE,IAAIf,QAAQ,CAACoB,KAAK;EACrD;EAAC,QAAAC,CAAA,G;WA1CUpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}