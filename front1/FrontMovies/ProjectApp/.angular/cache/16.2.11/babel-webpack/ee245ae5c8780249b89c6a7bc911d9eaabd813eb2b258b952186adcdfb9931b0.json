{"ast":null,"code":"import { environment } from 'src/env/env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserReportsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.reviewsList = [];\n  }\n  getAll() {\n    return this.httpClient.get(environment.apiHost + 'userReports');\n  }\n  create(report) {\n    return this.httpClient.post(environment.apiHost + 'userReports', report);\n  }\n  getByUserId(userId) {\n    return this.httpClient.get(environment.apiHost + 'userReports/user/' + userId);\n  }\n  deactivation(id) {\n    return this.httpClient.put(`${environment.apiHost}userReports/report/${id}`, {});\n  }\n  ignoreReport(id) {\n    return this.httpClient.put(`${environment.apiHost}userReports/ignore/${id}`, {});\n  }\n  static #_ = this.ɵfac = function UserReportsService_Factory(t) {\n    return new (t || UserReportsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserReportsService,\n    factory: UserReportsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserReportsService","constructor","httpClient","reviewsList","getAll","get","apiHost","create","report","post","getByUserId","userId","deactivation","id","put","ignoreReport","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\Front-end\\ProjectApp\\src\\app\\reports\\reports.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { environment } from 'src/env/env';\r\nimport {Observable} from \"rxjs\";\r\n\r\nimport { ReviewPutDTO } from '../models/dtos/reviewPutDTO.model';\r\nimport { ReviewPostDTO } from '../models/dtos/reviewPostDTO.model';\r\nimport { Review } from '../accommodation/accommodation/model/review.model';\r\nimport { ReviewStatusEnum } from '../models/enums/reviewStatusEnum';\r\nimport { UserReport } from '../accommodation/accommodation/model/userReport.model';\r\nimport { User } from '../models/user.model';\r\nimport { UserReportPostDTO } from '../models/dtos/userReportPostDTO.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserReportsService {\r\n  private reviewsList: UserReport[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<UserReport[]> {\r\n    return this.httpClient.get<UserReport[]>(environment.apiHost + 'userReports')\r\n  }\r\n\r\n  create(report: UserReportPostDTO): Observable<UserReportPostDTO> {\r\n\r\n    return this.httpClient.post<UserReportPostDTO>(environment.apiHost + 'userReports', report)\r\n  }\r\n\r\n  getByUserId(userId:String): Observable<UserReport[]> {\r\n    return this.httpClient.get<UserReport[]>(environment.apiHost + 'userReports/user/'+userId)\r\n  }\r\n  \r\n  deactivation(id: number): Observable<UserReport> {\r\n    return this.httpClient.put<UserReport>(`${environment.apiHost}userReports/report/${id}`, {});\r\n  }\r\n\r\n  ignoreReport(id: number): Observable<UserReport> {\r\n    return this.httpClient.put<UserReport>(`${environment.apiHost}userReports/ignore/${id}`, {});\r\n  }\r\n  \r\n}"],"mappings":"AAGA,SAASA,WAAW,QAAQ,aAAa;;;AAczC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,WAAW,GAAiB,EAAE;EAGtC;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAeN,WAAW,CAACO,OAAO,GAAG,aAAa,CAAC;EAC/E;EAEAC,MAAMA,CAACC,MAAyB;IAE9B,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAoBV,WAAW,CAACO,OAAO,GAAG,aAAa,EAAEE,MAAM,CAAC;EAC7F;EAEAE,WAAWA,CAACC,MAAa;IACvB,OAAO,IAAI,CAACT,UAAU,CAACG,GAAG,CAAeN,WAAW,CAACO,OAAO,GAAG,mBAAmB,GAACK,MAAM,CAAC;EAC5F;EAEAC,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAa,GAAGf,WAAW,CAACO,OAAO,sBAAsBO,EAAE,EAAE,EAAE,EAAE,CAAC;EAC9F;EAEAE,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAa,GAAGf,WAAW,CAACO,OAAO,sBAAsBO,EAAE,EAAE,EAAE,EAAE,CAAC;EAC9F;EAAC,QAAAG,CAAA,G;qBAzBUhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}