{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { environment } from 'src/env/env';\nimport { StatusEnum } from '../models/userEnums.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../user.service\";\nexport class AuthService {\n  constructor(http, userService) {\n    this.http = http;\n    this.userService = userService;\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      skip: 'true'\n    });\n    // user$ = new BehaviorSubject(\"\");\n    // userState = this.user$.asObservable();\n    this.user$ = new BehaviorSubject(null);\n    this.userState = this.user$.asObservable();\n    this.user$.next(this.getRole());\n    this.initUser();\n  }\n  initUser() {\n    const accessToken = localStorage.getItem('user');\n    const helper = new JwtHelperService();\n    const decodedToken = helper.decodeToken(accessToken);\n    if (decodedToken) {\n      this.userService.getById(decodedToken.sub).subscribe(user => {\n        if (user) {\n          this.user$.next(user);\n        }\n      }, error => {\n        console.error('Error fetching user details:', error);\n      });\n    } else {\n      console.error('Error decoding JWT token');\n    }\n  }\n  ngOnInit() {\n    const accessToken = localStorage.getItem('user');\n    const helper = new JwtHelperService();\n    const decodedToken = helper.decodeToken(accessToken);\n    if (decodedToken) {\n      // console.log(\"USERNAMEEE 899 \" , decodedToken.sub)\n      // Subscribe to the observable to get the actual UserGetDTO\n      this.userService.getById(decodedToken.sub).subscribe(user => {\n        if (user) {\n          // Now 'user' is the actual UserGetDTO\n          this.userGet = user;\n        }\n      });\n    } else {\n      console.error('Error decoding JWT token');\n    }\n  }\n  login(auth) {\n    //console.log(\"LOGG IN\")\n    return this.http.post(environment.apiHost + 'login', auth, {\n      headers: this.headers\n    });\n  }\n  logout() {\n    this.http.get(environment.apiHost + 'logOut', {\n      responseType: 'text'\n    }).subscribe({\n      next: () => {\n        localStorage.removeItem('user');\n        this.user$.next(null);\n      }\n    });\n    localStorage.removeItem('user');\n    this.user$.next(null);\n  }\n  getRole() {\n    if (this.isLoggedIn()) {\n      const accessToken = localStorage.getItem('user');\n      const helper = new JwtHelperService();\n      const decodedToken = helper.decodeToken(accessToken);\n      const user = this.userService.getById(decodedToken.sub);\n      //console.log(\"AUTHORITY -> \",helper.decodeToken(accessToken).authority );\n      return helper.decodeToken(accessToken).authority;\n      //  return this.userGet.role;\n    }\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('user') != null;\n  }\n  setUser() {\n    const accessToken = localStorage.getItem('user');\n    const helper = new JwtHelperService();\n    const decodedToken = helper.decodeToken(accessToken);\n    if (decodedToken) {\n      //console.log(\"USERNAAAME --> \", decodedToken.sub)\n      this.userService.getById(decodedToken.sub).subscribe(user => {\n        if (user && user.status === StatusEnum.ACTIVE) {\n          //console.log(\"IF USER --> \", decodedToken.sub)\n          this.user$.next(user);\n        } else {\n          this.logout();\n        }\n      }, error => {\n        console.error('Error fetching user details:', error);\n        this.logout();\n      });\n    } else {\n      console.error('Error decoding JWT token');\n      this.logout();\n    }\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","BehaviorSubject","JwtHelperService","environment","StatusEnum","AuthService","constructor","http","userService","headers","skip","user$","userState","asObservable","next","getRole","initUser","accessToken","localStorage","getItem","helper","decodedToken","decodeToken","getById","sub","subscribe","user","error","console","ngOnInit","userGet","login","auth","post","apiHost","logout","get","responseType","removeItem","isLoggedIn","authority","setUser","status","ACTIVE","_","i0","ɵɵinject","i1","HttpClient","i2","UserService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\CloudMovies\\front\\FrontMovies\\ProjectApp\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {AuthResponse} from \"./model/auth-resposne.model\";\r\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\r\nimport { environment } from 'src/env/env';\r\nimport { UserService } from '../user.service';\r\nimport { UserGetDTO } from '../models/userGetDTO.model';\r\nimport { RoleEnum, StatusEnum } from '../models/userEnums.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n userGet:UserGetDTO;\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    skip: 'true',\r\n  });\r\n\r\n  // user$ = new BehaviorSubject(\"\");\r\n  // userState = this.user$.asObservable();\r\n  user$ = new BehaviorSubject<UserGetDTO | null>(null);\r\n  userState = this.user$.asObservable();\r\n\r\n  constructor(private http: HttpClient,private userService:UserService) {\r\n    this.user$.next(this.getRole());\r\n    this.initUser();\r\n  }\r\n\r\n\r\n  private initUser(): void {\r\n    const accessToken: any = localStorage.getItem('user');\r\n    const helper = new JwtHelperService();\r\n    const decodedToken = helper.decodeToken(accessToken);\r\n\r\n    if (decodedToken) {\r\n      this.userService.getById(decodedToken.sub).subscribe(\r\n        (user: UserGetDTO) => {\r\n          if (user) {\r\n            this.user$.next(user);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching user details:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Error decoding JWT token');\r\n    }\r\n  }\r\n  ngOnInit() {\r\n \r\n  const accessToken: any = localStorage.getItem('user');\r\n  const helper = new JwtHelperService();\r\n  const decodedToken = helper.decodeToken(accessToken);\r\n  \r\n  if (decodedToken) {\r\n   // console.log(\"USERNAMEEE 899 \" , decodedToken.sub)\r\n    // Subscribe to the observable to get the actual UserGetDTO\r\n    this.userService.getById(decodedToken.sub).subscribe(\r\n      (user: UserGetDTO) => {\r\n        if (user) {\r\n          // Now 'user' is the actual UserGetDTO\r\n          this.userGet=user;\r\n  \r\n        }\r\n      });\r\n  } else {\r\n    console.error('Error decoding JWT token');\r\n  }\r\n      \r\n    }\r\n\r\n  login(auth: any): Observable<AuthResponse> {\r\n    //console.log(\"LOGG IN\")\r\n    return this.http.post<AuthResponse>(environment.apiHost + 'login', auth, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n     this.http.get(environment.apiHost + 'logOut', {\r\n\r\n      responseType: 'text',\r\n    }).subscribe({\r\n      next:()=>{\r\n        localStorage.removeItem('user');\r\n        this.user$.next(null);\r\n      }\r\n    });\r\n    localStorage.removeItem('user');\r\n    this.user$.next(null);\r\n  }\r\n  \r\n\r\n  getRole(): any {\r\n    if (this.isLoggedIn()) {\r\n      const accessToken: any = localStorage.getItem('user');\r\n      const helper = new JwtHelperService();\r\n      const decodedToken = helper.decodeToken(accessToken);\r\n      const user=this.userService.getById(decodedToken.sub);\r\n      //console.log(\"AUTHORITY -> \",helper.decodeToken(accessToken).authority );\r\n      return helper.decodeToken(accessToken).authority;\r\n    //  return this.userGet.role;\r\n    }\r\n  \r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return localStorage.getItem('user') != null;\r\n  }\r\n\r\n  setUser(): void {\r\n    const accessToken: any = localStorage.getItem('user');\r\n    const helper = new JwtHelperService();\r\n    const decodedToken = helper.decodeToken(accessToken);\r\n\r\n    if (decodedToken) {\r\n      //console.log(\"USERNAAAME --> \", decodedToken.sub)\r\n      this.userService.getById(decodedToken.sub).subscribe(\r\n        \r\n        (user: UserGetDTO) => {\r\n          if (user && user.status===StatusEnum.ACTIVE) {\r\n            //console.log(\"IF USER --> \", decodedToken.sub)\r\n            this.user$.next(user);\r\n          }else{\r\n            this.logout();\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching user details:', error);\r\n          this.logout();\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Error decoding JWT token');\r\n      this.logout();\r\n    }\r\n    \r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}