{"ast":null,"code":"import { environment } from 'src/env/env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.usersList = [];\n  }\n  getAll() {\n    return this.httpClient.get(environment.apiHost + 'users');\n  }\n  activateAccount(token) {\n    return this.httpClient.get(environment.apiHost + 'users/activate/' + token);\n  }\n  create(user) {\n    return this.httpClient.post(environment.apiHost + 'users', user);\n  }\n  update(user, username) {\n    return this.httpClient.put(environment.apiHost + 'users/' + username, user);\n  }\n  deleteUser(username) {\n    return this.httpClient.delete(environment.apiHost + 'users/' + username);\n  }\n  getById(username) {\n    return this.httpClient.get(environment.apiHost + 'users/username/' + username);\n  }\n  getUserById(username) {\n    return this.httpClient.get(environment.apiHost + 'users/user/username/' + username);\n  }\n  getByToken(token) {\n    return this.httpClient.get(environment.apiHost + 'users/token/' + token);\n  }\n  findByRole(role) {\n    return this.httpClient.get(environment.apiHost + 'users/role/' + role);\n  }\n  addFavourite(username, id) {\n    return this.httpClient.put(environment.apiHost + 'users/addFavourite/' + username + '/' + id, {});\n  }\n  removeFavourite(username, id) {\n    return this.httpClient.put(environment.apiHost + 'users/removeFavourite/' + username + '/' + id, {});\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserService","constructor","httpClient","usersList","getAll","get","apiHost","activateAccount","token","create","user","post","update","username","put","deleteUser","delete","getById","getUserById","getByToken","findByRole","role","addFavourite","id","removeFavourite","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\Front-end\\ProjectApp\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from './models/user.model';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { environment } from 'src/env/env';\r\nimport {Observable} from \"rxjs\";\r\nimport { UserPostDTO } from './models/userPostDTO.model';\r\nimport { UserGetDTO } from './models/userGetDTO.model';\r\nimport { UserPutDTO } from './models/userPutDTO.model';\r\nimport { RoleEnum } from './models/userEnums.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private usersList: UserGetDTO[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<UserGetDTO[]> {\r\n    return this.httpClient.get<UserGetDTO[]>(environment.apiHost + 'users')\r\n  }\r\n  activateAccount(token: string): Observable<string> {\r\n    return this.httpClient.get<string>(environment.apiHost + 'users/activate/' + token);\r\n  }\r\n\r\n  create(user: UserPostDTO): Observable<UserPostDTO> {\r\n    return this.httpClient.post<UserPostDTO>(environment.apiHost + 'users', user)\r\n  }\r\n  update(user: UserPutDTO,username:string): Observable<User> {\r\n    return this.httpClient.put<User>(environment.apiHost + 'users/' + username,user)\r\n  }\r\n\r\n  deleteUser(username:string) {\r\n    return this.httpClient.delete(environment.apiHost + 'users/' + username)\r\n  }\r\n\r\n  getById(username: string): Observable<UserGetDTO> {\r\n    return this.httpClient.get<UserGetDTO>(environment.apiHost + 'users/username/' + username)\r\n  }\r\n  getUserById(username:string):Observable<User>{\r\n    return this.httpClient.get<User>(environment.apiHost+'users/user/username/'+username);\r\n  }\r\n  getByToken(token: string): Observable<User>{\r\n    return this.httpClient.get<User>(environment.apiHost+'users/token/'+token)\r\n  }\r\n\r\n  findByRole(role: RoleEnum): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(environment.apiHost + 'users/role/' + role);\r\n  }\r\n\r\n  addFavourite(username: string, id: number): Observable<User> {\r\n    return this.httpClient.put<User>(environment.apiHost + 'users/addFavourite/' + username + '/' + id, {});\r\n  }\r\n\r\n  removeFavourite(username: string, id: number): Observable<User> {\r\n    return this.httpClient.put<User>(environment.apiHost + 'users/removeFavourite/' + username + '/' + id, {});\r\n  }\r\n\r\n}"],"mappings":"AAGA,SAASA,WAAW,QAAQ,aAAa;;;AAUzC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,SAAS,GAAiB,EAAE;EAGpC;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAeN,WAAW,CAACO,OAAO,GAAG,OAAO,CAAC;EACzE;EACAC,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAASN,WAAW,CAACO,OAAO,GAAG,iBAAiB,GAAGE,KAAK,CAAC;EACrF;EAEAC,MAAMA,CAACC,IAAiB;IACtB,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAcZ,WAAW,CAACO,OAAO,GAAG,OAAO,EAAEI,IAAI,CAAC;EAC/E;EACAE,MAAMA,CAACF,IAAgB,EAACG,QAAe;IACrC,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAOf,WAAW,CAACO,OAAO,GAAG,QAAQ,GAAGO,QAAQ,EAACH,IAAI,CAAC;EAClF;EAEAK,UAAUA,CAACF,QAAe;IACxB,OAAO,IAAI,CAACX,UAAU,CAACc,MAAM,CAACjB,WAAW,CAACO,OAAO,GAAG,QAAQ,GAAGO,QAAQ,CAAC;EAC1E;EAEAI,OAAOA,CAACJ,QAAgB;IACtB,OAAO,IAAI,CAACX,UAAU,CAACG,GAAG,CAAaN,WAAW,CAACO,OAAO,GAAG,iBAAiB,GAAGO,QAAQ,CAAC;EAC5F;EACAK,WAAWA,CAACL,QAAe;IACzB,OAAO,IAAI,CAACX,UAAU,CAACG,GAAG,CAAON,WAAW,CAACO,OAAO,GAAC,sBAAsB,GAACO,QAAQ,CAAC;EACvF;EACAM,UAAUA,CAACX,KAAa;IACtB,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAON,WAAW,CAACO,OAAO,GAAC,cAAc,GAACE,KAAK,CAAC;EAC5E;EAEAY,UAAUA,CAACC,IAAc;IACvB,OAAO,IAAI,CAACnB,UAAU,CAACG,GAAG,CAASN,WAAW,CAACO,OAAO,GAAG,aAAa,GAAGe,IAAI,CAAC;EAChF;EAEAC,YAAYA,CAACT,QAAgB,EAAEU,EAAU;IACvC,OAAO,IAAI,CAACrB,UAAU,CAACY,GAAG,CAAOf,WAAW,CAACO,OAAO,GAAG,qBAAqB,GAAGO,QAAQ,GAAG,GAAG,GAAGU,EAAE,EAAE,EAAE,CAAC;EACzG;EAEAC,eAAeA,CAACX,QAAgB,EAAEU,EAAU;IAC1C,OAAO,IAAI,CAACrB,UAAU,CAACY,GAAG,CAAOf,WAAW,CAACO,OAAO,GAAG,wBAAwB,GAAGO,QAAQ,GAAG,GAAG,GAAGU,EAAE,EAAE,EAAE,CAAC;EAC5G;EAAC,QAAAE,CAAA,G;qBA5CUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}