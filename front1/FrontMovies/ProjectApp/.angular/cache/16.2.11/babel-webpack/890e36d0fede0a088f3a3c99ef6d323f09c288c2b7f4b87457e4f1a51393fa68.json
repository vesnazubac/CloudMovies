{"ast":null,"code":"import { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { RoleEnum } from '../models/userEnums.model';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { PriceTypeEnum } from '../models/enums/priceTypeEnum';\nimport { ReservationConfirmationEnum } from '../models/enums/reservationConfirmationEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"../accommodation/accommodation.service\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../accommodation/accommodation-data.service.module\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../models/reservation/reservation.service\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/datepicker\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/common\";\nfunction ReservationComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 13);\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ReservationComponent {\n  constructor(userService, authService, accommodationService, snackBar, fb, dataService, router, route, reservationService) {\n    this.userService = userService;\n    this.authService = authService;\n    this.accommodationService = accommodationService;\n    this.snackBar = snackBar;\n    this.fb = fb;\n    this.dataService = dataService;\n    this.router = router;\n    this.route = route;\n    this.reservationService = reservationService;\n    this.reservationToSend = {\n      accommodationId: 0,\n      userId: \"\",\n      timeSlot: {\n        startDate: new Date(),\n        endDate: new Date()\n      },\n      numberOfGuests: 0,\n      price: 0,\n      priceType: 0\n    };\n    this.reservationForm = this.fb.group({\n      guests: [0, [Validators.pattern('^[0-9]+$'), Validators.min(1)]],\n      startDate: [null, Validators.required],\n      endDate: [null, Validators.required]\n    }, {\n      validators: this.dateValidator\n    });\n  }\n  ngOnInit() {\n    this.authService.userState.subscribe(result => {\n      if (result != null) {\n        this.role = result.role;\n        const accessToken = localStorage.getItem('user');\n        const helper = new JwtHelperService();\n        const decodedToken = helper.decodeToken(accessToken);\n        if (decodedToken) {\n          this.userService.getUserById(decodedToken.sub).subscribe(user => {\n            if (user) {\n              this.user = user;\n              console.log(this.user);\n            }\n          });\n        } else {\n          console.error('Error decoding JWT token');\n        }\n      } else {\n        this.role = RoleEnum.UNAUTHENTICATED;\n      }\n      // this.cdr.detectChanges();\n    });\n\n    if (this.route.paramMap) this.route.paramMap.subscribe(params => {\n      const accommodationId = +params.get('id');\n      this.accommodationService.getById(accommodationId).subscribe(foundAccommodation => {\n        if (foundAccommodation) {\n          this.accommodation = foundAccommodation;\n        } else {\n          console.error(`Accommodation with ID ${accommodationId} not found`);\n        }\n      }, error => {\n        console.error('Error fetching accommodation:', error);\n      });\n    });\n  }\n  formValidation() {\n    const guestsValue = this.reservationForm.get('guests')?.value;\n    console.log(guestsValue);\n    if (guestsValue != undefined && isNaN(guestsValue)) {\n      console.error('Please enter valid number for guests');\n      this.openSnackBar('Please enter valid number for guests');\n      return false;\n    } else if (guestsValue != undefined && guestsValue <= 0) return false;\n    return true;\n  }\n  openSnackBar(message) {\n    this.snackBar.open(message, 'OK', {\n      duration: 3000\n    });\n  }\n  dateValidator(formGroup) {\n    const startDate = formGroup.get('startDate')?.value;\n    const endDate = formGroup.get('endDate')?.value;\n    if (startDate && endDate && startDate >= endDate) {\n      formGroup.get('endDate')?.setErrors({\n        dateRange: true\n      });\n    } else {\n      formGroup.get('endDate')?.setErrors(null);\n    }\n    if (startDate && endDate && startDate < new Date()) {\n      formGroup.get('startDate')?.setErrors({\n        pastDate: true\n      });\n    } else {\n      formGroup.get('startDate')?.setErrors(null);\n    }\n    if (endDate && endDate < new Date()) {\n      formGroup.get('endDate')?.setErrors({\n        pastDate: true\n      });\n    } else {\n      formGroup.get('endDate')?.setErrors(null);\n    }\n    return null;\n  }\n  checkPrice() {\n    if (!this.formValidation()) {\n      return;\n    }\n    console.log(this.accommodation?.id);\n    if (this.accommodation?.id) {\n      this.reservationToSend.accommodationId = this.accommodation.id;\n    }\n    this.reservationToSend.numberOfGuests = this.reservationForm.get('guests')?.value;\n    this.reservationToSend.userId = this.user.username;\n    console.log(\"USERNAME RES\", this.user.username);\n    this.reservationToSend.timeSlot.startDate = this.reservationForm.get('startDate')?.value;\n    this.reservationToSend.timeSlot.endDate = this.reservationForm.get('endDate')?.value;\n    if (this.accommodation) for (const p of this.accommodation?.prices) {\n      if (this.isWithinTimeSlot(this.reservationToSend.timeSlot.startDate, this.reservationToSend.timeSlot.endDate, p.timeSlot)) {\n        this.reservationToSend.price = p.price;\n        this.reservationToSend.priceType = p.type;\n      }\n    }\n    console.log(this.reservationToSend);\n    if (this.reservationToSend) {\n      this.reservationService.create(this.reservationToSend).subscribe(reservation => {\n        this.reservation = reservation;\n        this.reservation.user = this.user;\n        console.log(this.reservation);\n        const totalPrice = this.calculateTotalPrice(this.reservation);\n        this.openSnackBar('Reservation request sent successfully. Total price would be ' + totalPrice + '$');\n        if (this.accommodation?.reservationConfirmation == ReservationConfirmationEnum.AUTOMATIC) {\n          // Confirm the reservation after creating it\n          this.confirmReservation(reservation.id);\n        }\n      }, error => {\n        console.error('Error creating reservation:', error);\n        if (error.error.error) {\n          this.openSnackBar(error.error.error);\n        } else {\n          this.openSnackBar('An error occurred while creating the reservation. Check the number of guests and dates of your reservations');\n        }\n      });\n    }\n  }\n  confirmReservation(reservationId) {\n    this.reservationService.confirmReservation(reservationId).subscribe(() => {\n      console.log('Reservation confirmed successfully.');\n    }, error => {\n      console.error('Error confirming reservation:', error);\n    });\n  }\n  calculateTotalPrice(reservation) {\n    if (!this.accommodation?.prices) {\n      return 0;\n    }\n    for (const p of this.accommodation?.prices) {\n      if (this.isWithinTimeSlot(reservation.timeSlot.startDate, reservation.timeSlot.endDate, p.timeSlot)) {\n        const days = this.daysBetween(reservation.timeSlot.startDate, reservation.timeSlot.endDate);\n        if (p.type == PriceTypeEnum.PERUNIT) {\n          return days * p.price;\n        } else {\n          return days * p.price * reservation.numberOfGuests;\n        }\n      }\n    }\n    return 0;\n  }\n  daysBetween(arrival, checkout) {\n    const oneDayMilliseconds = 24 * 60 * 60 * 1000;\n    const arrivalTime = new Date(arrival).getTime();\n    const checkoutTime = new Date(checkout).getTime();\n    const timeDifference = checkoutTime - arrivalTime;\n    const daysDifference = Math.round(timeDifference / oneDayMilliseconds);\n    return daysDifference;\n  }\n  isWithinTimeSlot(arrival, checkout, timeSlot) {\n    const arrivalTime = new Date(arrival).getTime();\n    const checkoutTime = new Date(checkout).getTime();\n    // Convert the string dates to Date objects\n    const timeSlotStart = new Date(timeSlot.startDate).getTime();\n    const timeSlotEnd = new Date(timeSlot.endDate).getTime();\n    if (isNaN(timeSlotStart) || isNaN(timeSlotEnd)) {\n      return false;\n    }\n    return !(arrivalTime < timeSlotStart || checkoutTime > timeSlotEnd);\n  }\n  get isFormValid() {\n    return this.reservationForm.valid;\n  }\n  getTestableReservationService() {\n    return this.reservationService;\n  }\n  goodDates() {\n    const date1 = this.reservationForm.get('startDate')?.value;\n    const date2 = this.reservationForm.get('endDate')?.value;\n    return date1 < date2;\n  }\n  static #_ = this.ɵfac = function ReservationComponent_Factory(t) {\n    return new (t || ReservationComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.AccommodationService), i0.ɵɵdirectiveInject(i4.MatSnackBar), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.AccommodationDataService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i7.ActivatedRoute), i0.ɵɵdirectiveInject(i8.ReservationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReservationComponent,\n    selectors: [[\"app-reservation\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 30,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [1, \"data-container\"], [1, \"register-header\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"How many guests:\", \"formControlName\", \"guests\"], [\"id\", \"errorGuests\", 4, \"ngIf\"], [1, \"date-picker-container\"], [\"matInput\", \"\", \"formControlName\", \"startDate\", 3, \"matDatepicker\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"startPicker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"endDate\", 3, \"matDatepicker\"], [\"endPicker\", \"\"], [\"mat-button\", \"\", 2, \"background-color\", \"#1e88e5\", \"color\", \"white\", \"margin-top\", \"4%\", 3, \"click\"], [\"id\", \"errorGuests\"]],\n    template: function ReservationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Create reservation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Number of guests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, ReservationComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\")(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Choose a start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementStart(14, \"mat-hint\");\n        i0.ɵɵtext(15, \"MM/DD/YYYY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"mat-datepicker-toggle\", 8)(17, \"mat-datepicker\", null, 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\")(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Choose an end date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementStart(23, \"mat-hint\");\n        i0.ɵɵtext(24, \"MM/DD/YYYY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"mat-datepicker-toggle\", 8)(26, \"mat-datepicker\", null, 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ReservationComponent_Template_button_click_28_listener() {\n          return ctx.checkPrice();\n        });\n        i0.ɵɵtext(29, \"Create reservation\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(18);\n        const _r2 = i0.ɵɵreference(27);\n        let tmp_1_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.reservationForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.reservationForm.get(\"guests\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r2);\n      }\n    },\n    dependencies: [MatFormFieldModule, i9.MatFormField, i9.MatLabel, i9.MatHint, i9.MatError, i9.MatSuffix, ReactiveFormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, MatInputModule, i10.MatInput, MatDatepickerModule, i11.MatDatepicker, i11.MatDatepickerInput, i11.MatDatepickerToggle, MatButtonModule, i12.MatButton, CommonModule, i13.NgIf],\n    styles: [\"*[_ngcontent-%COMP%]{\\n    font-size: medium;\\n  }\\n  .register-header[_ngcontent-%COMP%] {\\n    color: #007bff; \\n    font-size: 24px;\\n    margin-bottom: 3%;\\n    margin-top: 5%;\\n  }\\n  .card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap; \\n    justify-content:first baseline;\\n    margin-bottom: 100px;\\n  }\\n  mat-form-field[_ngcontent-%COMP%] {\\n    flex: 1; \\n  }\\n  h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{\\n    color: #007bff; \\n  }\\n  .data-container[_ngcontent-%COMP%] {\\n    text-align: center;\\n    max-width: 60%;\\n    margin: 20px auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n  }\\n  .date-picker-container[_ngcontent-%COMP%] {\\n    text-align: center;\\n    width: 70%;\\n    margin: 0 auto;  \\n    display: flex;\\n    justify-content: space-between;\\n    align-items: flex-end;\\n    gap: 1%; \\n    margin-bottom: 2%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVzZXJ2YXRpb24vcmVzZXJ2YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsY0FBYztJQUNkLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsY0FBYztFQUNoQjtFQUNBO0lBQ0UsYUFBYTtJQUNiLGVBQWU7SUFDZiw4QkFBOEI7SUFDOUIsb0JBQW9CO0VBQ3RCO0VBQ0E7SUFDRSxPQUFPO0VBQ1Q7RUFDQTtJQUNFLGNBQWM7RUFDaEI7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGNBQWM7SUFDZCxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLHFCQUFxQjtJQUNyQixPQUFPO0lBQ1AsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiKntcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gIH1cclxuICAucmVnaXN0ZXItaGVhZGVyIHtcclxuICAgIGNvbG9yOiAjMDA3YmZmOyBcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMlO1xyXG4gICAgbWFyZ2luLXRvcDogNSU7XHJcbiAgfVxyXG4gIC5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwOyBcclxuICAgIGp1c3RpZnktY29udGVudDpmaXJzdCBiYXNlbGluZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4gIH1cclxuICBtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmbGV4OiAxOyBcclxuICB9XHJcbiAgaDIsaDN7XHJcbiAgICBjb2xvcjogIzAwN2JmZjsgXHJcbiAgfVxyXG4gIC5kYXRhLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXgtd2lkdGg6IDYwJTtcclxuICAgIG1hcmdpbjogMjBweCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgfVxyXG4gIC5kYXRlLXBpY2tlci1jb250YWluZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvOyAgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgZ2FwOiAxJTsgXHJcbiAgICBtYXJnaW4tYm90dG9tOiAyJTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatDatepickerModule","MatButtonModule","CommonModule","RoleEnum","JwtHelperService","PriceTypeEnum","ReservationConfirmationEnum","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ReservationComponent","constructor","userService","authService","accommodationService","snackBar","fb","dataService","router","route","reservationService","reservationToSend","accommodationId","userId","timeSlot","startDate","Date","endDate","numberOfGuests","price","priceType","reservationForm","group","guests","pattern","min","required","validators","dateValidator","ngOnInit","userState","subscribe","result","role","accessToken","localStorage","getItem","helper","decodedToken","decodeToken","getUserById","sub","user","console","log","error","UNAUTHENTICATED","paramMap","params","get","getById","foundAccommodation","accommodation","formValidation","guestsValue","value","undefined","isNaN","openSnackBar","message","open","duration","formGroup","setErrors","dateRange","pastDate","checkPrice","id","username","p","prices","isWithinTimeSlot","type","create","reservation","totalPrice","calculateTotalPrice","reservationConfirmation","AUTOMATIC","confirmReservation","reservationId","days","daysBetween","PERUNIT","arrival","checkout","oneDayMilliseconds","arrivalTime","getTime","checkoutTime","timeDifference","daysDifference","Math","round","timeSlotStart","timeSlotEnd","isFormValid","valid","getTestableReservationService","goodDates","date1","date2","_","ɵɵdirectiveInject","i1","UserService","i2","AuthService","i3","AccommodationService","i4","MatSnackBar","i5","FormBuilder","i6","AccommodationDataService","i7","Router","ActivatedRoute","i8","ReservationService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ReservationComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","ReservationComponent_mat_error_8_Template","ɵɵlistener","ReservationComponent_Template_button_click_28_listener","ɵɵproperty","ɵɵadvance","tmp_1_0","hasError","_r1","_r2","i9","MatFormField","MatLabel","MatHint","MatError","MatSuffix","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i10","MatInput","i11","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","i12","MatButton","i13","NgIf","styles"],"sources":["C:\\Users\\USER\\Desktop\\FrontMovies\\ProjectApp\\src\\app\\reservation\\reservation.component.ts","C:\\Users\\USER\\Desktop\\FrontMovies\\ProjectApp\\src\\app\\reservation\\reservation.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { AccommodationService } from '../accommodation/accommodation.service';\r\nimport { AccommodationDataService } from '../accommodation/accommodation-data.service.module';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Accommodation } from '../accommodation/accommodation/model/accommodation.model';\r\nimport { UserGetDTO } from '../models/userGetDTO.model';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { RoleEnum } from '../models/userEnums.model';\r\nimport { ReservationService } from '../models/reservation/reservation.service';\r\nimport { ReservationPostDTO } from '../models/dtos/reservationPostDTO.model';\r\nimport { Reservation } from '../models/reservation/reservation.model';\r\nimport { UserService } from '../user.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { PriceCard } from '../accommodation/accommodation/model/priceCard.model';\r\nimport { TimeSlot } from '../accommodation/accommodation/model/timeSlot.model';\r\nimport { PriceTypeEnum } from '../models/enums/priceTypeEnum';\r\nimport { ReservationConfirmationEnum } from '../models/enums/reservationConfirmationEnum';\r\nimport { User } from '../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-reservation',\r\n  templateUrl: './reservation.component.html',\r\n  styleUrls: ['./reservation.component.css'],\r\n  standalone:true,\r\n  imports:[MatFormFieldModule,ReactiveFormsModule,MatInputModule,MatDatepickerModule,MatButtonModule,CommonModule]\r\n})\r\nexport class ReservationComponent {\r\n  accommodation: Accommodation | undefined;\r\n  user:User;\r\n  role: RoleEnum ;\r\n  reservation:Reservation | undefined;\r\n  reservationToSend: ReservationPostDTO = {\r\n    accommodationId:0,\r\n    userId:\"\",\r\n    timeSlot: {\r\n      startDate: new Date(),\r\n      endDate: new Date()\r\n    },\r\n    numberOfGuests: 0,\r\n    price:0,\r\n    priceType:0\r\n  };\r\n\r\n  constructor(private userService:UserService, private authService: AuthService,private accommodationService: AccommodationService, private snackBar:MatSnackBar, private fb: FormBuilder,\r\n    private dataService: AccommodationDataService,private router: Router,\r\n    private route:ActivatedRoute, private reservationService:ReservationService) {\r\n      \r\n  }\r\n  reservationForm = this.fb.group({\r\n    guests: [0, [Validators.pattern('^[0-9]+$'), Validators.min(1)]],\r\n    startDate: [null, Validators.required],\r\n    endDate: [null, Validators.required],\r\n  }, { validators: this.dateValidator });\r\n  ngOnInit() {\r\n    this.authService.userState.subscribe((result) => {\r\n      if(result != null){\r\n        this.role = result.role;\r\n        const accessToken: any = localStorage.getItem('user');\r\n        const helper = new JwtHelperService();\r\n        const decodedToken = helper.decodeToken(accessToken);\r\n  \r\n        if (decodedToken) {\r\n        \r\n        \r\n        this.userService.getUserById(decodedToken.sub).subscribe(\r\n          (user: User) => {\r\n            if (user) {\r\n              \r\n              this.user=user;\r\n              console.log(this.user)\r\n            }\r\n          });\r\n  } else {\r\n    console.error('Error decoding JWT token');\r\n  }\r\n      }else{\r\n       this.role=RoleEnum.UNAUTHENTICATED;\r\n      }\r\n     // this.cdr.detectChanges();\r\n    })\r\n    if(this.route.paramMap)\r\n    this.route.paramMap.subscribe((params: ParamMap) => {\r\n      const accommodationId = +params.get('id')!;\r\n      this.accommodationService.getById(accommodationId).subscribe(\r\n        (foundAccommodation) => {\r\n          if (foundAccommodation) {\r\n            this.accommodation = foundAccommodation;\r\n          } else {\r\n            console.error(`Accommodation with ID ${accommodationId} not found`);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching accommodation:', error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  formValidation():boolean{\r\n    const guestsValue = this.reservationForm.get('guests')?.value;\r\n    console.log(guestsValue);\r\n    if (guestsValue!=undefined && isNaN(guestsValue)) {\r\n      console.error('Please enter valid number for guests');\r\n      this.openSnackBar('Please enter valid number for guests');\r\n      return false;\r\n    }else if(guestsValue!=undefined && guestsValue<=0)\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  openSnackBar(message: string) {\r\n    this.snackBar.open(message, 'OK', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n  \r\n  dateValidator(formGroup: FormGroup) {\r\n    const startDate = formGroup.get('startDate')?.value;\r\n    const endDate = formGroup.get('endDate')?.value;\r\n\r\n    if (startDate && endDate && startDate >= endDate) {\r\n      formGroup.get('endDate')?.setErrors({ dateRange: true });\r\n    } else {\r\n      formGroup.get('endDate')?.setErrors(null);\r\n    }\r\n\r\n    if (startDate && endDate && startDate < new Date()) {\r\n      formGroup.get('startDate')?.setErrors({ pastDate: true });\r\n    } else {\r\n      formGroup.get('startDate')?.setErrors(null);\r\n    }\r\n\r\n    if (endDate && endDate < new Date()) {\r\n      formGroup.get('endDate')?.setErrors({ pastDate: true });\r\n    } else {\r\n      formGroup.get('endDate')?.setErrors(null);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  checkPrice(){\r\n    if(!this.formValidation()){\r\n      return;\r\n    }\r\n    console.log(this.accommodation?.id);\r\n    if(this.accommodation?.id){\r\n      this.reservationToSend.accommodationId=this.accommodation.id;\r\n    }\r\n    this.reservationToSend.numberOfGuests=this.reservationForm.get('guests')?.value;\r\n    this.reservationToSend.userId=this.user.username;\r\n    console.log(\"USERNAME RES\",this.user.username)\r\n    this.reservationToSend.timeSlot.startDate=this.reservationForm.get('startDate')?.value;\r\n    this.reservationToSend.timeSlot.endDate=this.reservationForm.get('endDate')?.value;\r\n\r\n    if(this.accommodation)\r\n      for(const p of this.accommodation?.prices){\r\n        if(this.isWithinTimeSlot(this.reservationToSend.timeSlot.startDate,this.reservationToSend.timeSlot.endDate,p.timeSlot)){\r\n          this.reservationToSend.price=p.price;\r\n          this.reservationToSend.priceType=p.type;\r\n        }\r\n      }\r\n\r\n\r\n    console.log(this.reservationToSend);\r\n    if(this.reservationToSend){\r\n      this.reservationService.create(this.reservationToSend)\r\n    .subscribe(\r\n      (reservation) => {\r\n        this.reservation = reservation;\r\n        this.reservation.user=this.user;\r\n        console.log(this.reservation);\r\n        const totalPrice=this.calculateTotalPrice(this.reservation);\r\n        this.openSnackBar('Reservation request sent successfully. Total price would be '+totalPrice+'$');\r\n        if(this.accommodation?.reservationConfirmation==ReservationConfirmationEnum.AUTOMATIC){\r\n          // Confirm the reservation after creating it\r\n          this.confirmReservation(reservation.id);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error creating reservation:', error);\r\n        if (error.error.error) {\r\n          this.openSnackBar(error.error.error);\r\n        } else {\r\n          this.openSnackBar('An error occurred while creating the reservation. Check the number of guests and dates of your reservations');\r\n        }\r\n\r\n      }\r\n    );\r\n    }\r\n  }\r\n\r\n  confirmReservation(reservationId: number|undefined) {\r\n    this.reservationService.confirmReservation(reservationId)\r\n      .subscribe(\r\n        () => {\r\n          console.log('Reservation confirmed successfully.');\r\n        },\r\n        (error) => {\r\n          console.error('Error confirming reservation:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  calculateTotalPrice(reservation:Reservation):number{\r\n    if (!this.accommodation?.prices) {\r\n      return 0;\r\n    }\r\n    for(const p of this.accommodation?.prices){\r\n      if(this.isWithinTimeSlot(reservation.timeSlot.startDate,reservation.timeSlot.endDate,p.timeSlot)){\r\n        const days=this.daysBetween(reservation.timeSlot.startDate,reservation.timeSlot.endDate);\r\n        if(p.type==PriceTypeEnum.PERUNIT){\r\n          return days*p.price;\r\n        }\r\n        else{\r\n          return days*p.price*reservation.numberOfGuests;\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n  daysBetween(arrival:Date, checkout:Date):number{\r\n    const oneDayMilliseconds = 24 * 60 * 60 * 1000;\r\n    const arrivalTime = new Date(arrival).getTime();\r\n    const checkoutTime = new Date(checkout).getTime();\r\n\r\n    const timeDifference = checkoutTime - arrivalTime;\r\n    const daysDifference = Math.round(timeDifference / oneDayMilliseconds);\r\n\r\n    return daysDifference;\r\n  }\r\n  isWithinTimeSlot(arrival:Date, checkout:Date, timeSlot:TimeSlot):boolean{\r\n    const arrivalTime = new Date(arrival).getTime();\r\n    const checkoutTime = new Date(checkout).getTime();\r\n    // Convert the string dates to Date objects\r\n    const timeSlotStart = new Date(timeSlot.startDate).getTime();\r\n    const timeSlotEnd = new Date(timeSlot.endDate).getTime();\r\n\r\n    if (isNaN(timeSlotStart) || isNaN(timeSlotEnd)) {\r\n      return false;\r\n    }\r\n\r\n    return !(arrivalTime < timeSlotStart || checkoutTime > timeSlotEnd);\r\n  }\r\n  get isFormValid(): boolean{\r\n    return this.reservationForm.valid;\r\n  }\r\n  getTestableReservationService(){\r\n    return this.reservationService;\r\n  }\r\n  goodDates(): boolean{\r\n    const date1=this.reservationForm.get('startDate')?.value;\r\n    const date2=this.reservationForm.get('endDate')?.value;\r\n    return date1<date2;\r\n  }\r\n}\r\n","<form [formGroup]=\"reservationForm\">\r\n    <div class=\"data-container\">\r\n      <h2 class=\"register-header\">Create reservation</h2>\r\n      \r\n  \r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Number of guests</mat-label>\r\n        <input matInput placeholder=\"How many guests:\" formControlName=\"guests\">\r\n        <mat-error *ngIf=\"reservationForm.get('guests')?.hasError('required')\" id=\"errorGuests\">This field is required</mat-error>\r\n      </mat-form-field>\r\n  \r\n      <div class=\"date-picker-container\">\r\n        <mat-form-field>\r\n          <mat-label>Choose a start date</mat-label>\r\n          <input matInput [matDatepicker]=\"startPicker\" formControlName=\"startDate\">\r\n          <mat-hint>MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle matIconSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #startPicker></mat-datepicker>\r\n        </mat-form-field>\r\n      \r\n        <mat-form-field>\r\n          <mat-label>Choose an end date</mat-label>\r\n          <input matInput [matDatepicker]=\"endPicker\" formControlName=\"endDate\">\r\n          <mat-hint>MM/DD/YYYY</mat-hint>\r\n          <mat-datepicker-toggle matIconSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #endPicker></mat-datepicker>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <button (click)=\"checkPrice()\" mat-button style=\"background-color: #1e88e5; color: white;margin-top: 4%;\">Create reservation</button>\r\n    </div>\r\n  </form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}