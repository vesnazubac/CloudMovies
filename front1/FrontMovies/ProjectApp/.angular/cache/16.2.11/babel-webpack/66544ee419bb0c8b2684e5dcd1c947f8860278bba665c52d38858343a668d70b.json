{"ast":null,"code":"import { environment } from 'src/env/env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReviewService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.reviewsList = [];\n  }\n  getAll() {\n    return this.httpClient.get(environment.apiHost + 'reviews');\n  }\n  create(review) {\n    return this.httpClient.post(environment.apiHost + 'reviews', review);\n  }\n  update(review, id) {\n    return this.httpClient.put(environment.apiHost + 'reviews/' + id, review);\n  }\n  findByOwnerId(ownerId) {\n    return this.httpClient.get(environment.apiHost + 'reviews/owner/' + ownerId);\n  }\n  findByAccommodationId(accommodationId) {\n    return this.httpClient.get(environment.apiHost + 'reviews/accommodation/' + accommodationId);\n  }\n  delete(id) {\n    return this.httpClient.delete(environment.apiHost + 'reviews/' + id);\n  }\n  findPendingByOwnerId(ownerId) {\n    return this.httpClient.get(environment.apiHost + 'reviews/owner/pending/' + ownerId);\n  }\n  findPendingByAccommodationId(accommodationId) {\n    return this.httpClient.get(environment.apiHost + 'reviews/accommodation/pending/' + accommodationId);\n  }\n  approveReview(reviewId) {\n    return this.httpClient.put(environment.apiHost + 'reviews/' + reviewId + '/update-status/approve', null);\n  }\n  rejectReview(reviewId) {\n    return this.httpClient.put(environment.apiHost + 'reviews/' + reviewId + '/update-status/reject', null);\n  }\n  findAverageGradeByOwnerId(ownerId) {\n    return this.httpClient.get(environment.apiHost + 'reviews/averageGradesOwners/' + ownerId);\n  }\n  findAverageGradeByAccommodationId(accommodationId) {\n    //console.log(\"A PUTANJA JE \" + environment.apiHost + 'reviews/averageGradesAccommodations/' + accommodationId)\n    return this.httpClient.get(environment.apiHost + 'reviews/averageGradesAccommodations/' + accommodationId);\n  }\n  static #_ = this.ɵfac = function ReviewService_Factory(t) {\n    return new (t || ReviewService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ReviewService,\n    factory: ReviewService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ReviewService","constructor","httpClient","reviewsList","getAll","get","apiHost","create","review","post","update","id","put","findByOwnerId","ownerId","findByAccommodationId","accommodationId","delete","findPendingByOwnerId","findPendingByAccommodationId","approveReview","reviewId","rejectReview","findAverageGradeByOwnerId","findAverageGradeByAccommodationId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\Front-end\\ProjectApp\\src\\app\\rating\\review.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { environment } from 'src/env/env';\r\nimport {Observable} from \"rxjs\";\r\n\r\nimport { ReviewPutDTO } from '../models/dtos/reviewPutDTO.model';\r\nimport { ReviewPostDTO } from '../models/dtos/reviewPostDTO.model';\r\nimport { Review } from '../accommodation/accommodation/model/review.model';\r\nimport { ReviewStatusEnum } from '../models/enums/reviewStatusEnum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n  private reviewsList: Review[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getAll(): Observable<Review[]> {\r\n    return this.httpClient.get<Review[]>(environment.apiHost + 'reviews')\r\n  }\r\n\r\n  create(review: ReviewPostDTO): Observable<ReviewPostDTO> {\r\n\r\n    return this.httpClient.post<ReviewPostDTO>(environment.apiHost + 'reviews', review)\r\n  }\r\n  update(review: ReviewPutDTO,id:number): Observable<Review> {\r\n   \r\n    return this.httpClient.put<Review>(environment.apiHost + 'reviews/' + id,review)\r\n  }\r\n\r\n  findByOwnerId(ownerId: string): Observable<Review[]> {\r\n    return this.httpClient.get<Review[]>(environment.apiHost + 'reviews/owner/' + ownerId);\r\n  }\r\n\r\n  findByAccommodationId(accommodationId: number): Observable<Review[]> {\r\n    return this.httpClient.get<Review[]>(environment.apiHost + 'reviews/accommodation/' + accommodationId);\r\n  }\r\n  delete(id:number) {\r\n    return this.httpClient.delete(environment.apiHost + 'reviews/' + id)\r\n  }\r\n\r\n  findPendingByOwnerId(ownerId: string): Observable<Review[]> {\r\n    return this.httpClient.get<Review[]>(environment.apiHost + 'reviews/owner/pending/' + ownerId);\r\n  }\r\n\r\n  findPendingByAccommodationId(accommodationId: number): Observable<Review[]> {\r\n    return this.httpClient.get<Review[]>(environment.apiHost + 'reviews/accommodation/pending/' + accommodationId);\r\n  }\r\n\r\n  approveReview(reviewId: number|undefined): Observable<void> {\r\n    return this.httpClient.put<void>(environment.apiHost + 'reviews/' + reviewId + '/update-status/approve', null);\r\n  }\r\n\r\n  rejectReview(reviewId: number|undefined): Observable<void> {\r\n    return this.httpClient.put<void>(environment.apiHost + 'reviews/' + reviewId + '/update-status/reject', null);\r\n  }\r\n\r\n  findAverageGradeByOwnerId(ownerId: String): Observable<number> {\r\n    return this.httpClient.get<number>(environment.apiHost + 'reviews/averageGradesOwners/' + ownerId);\r\n  }\r\n\r\n  \r\n  findAverageGradeByAccommodationId(accommodationId: number): Observable<number> {\r\n    //console.log(\"A PUTANJA JE \" + environment.apiHost + 'reviews/averageGradesAccommodations/' + accommodationId)\r\n    return this.httpClient.get<number>(environment.apiHost + 'reviews/averageGradesAccommodations/' + accommodationId);\r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n}"],"mappings":"AAGA,SAASA,WAAW,QAAQ,aAAa;;;AAWzC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,WAAW,GAAa,EAAE;EAGlC;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAWN,WAAW,CAACO,OAAO,GAAG,SAAS,CAAC;EACvE;EAEAC,MAAMA,CAACC,MAAqB;IAE1B,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAgBV,WAAW,CAACO,OAAO,GAAG,SAAS,EAAEE,MAAM,CAAC;EACrF;EACAE,MAAMA,CAACF,MAAoB,EAACG,EAAS;IAEnC,OAAO,IAAI,CAACT,UAAU,CAACU,GAAG,CAASb,WAAW,CAACO,OAAO,GAAG,UAAU,GAAGK,EAAE,EAACH,MAAM,CAAC;EAClF;EAEAK,aAAaA,CAACC,OAAe;IAC3B,OAAO,IAAI,CAACZ,UAAU,CAACG,GAAG,CAAWN,WAAW,CAACO,OAAO,GAAG,gBAAgB,GAAGQ,OAAO,CAAC;EACxF;EAEAC,qBAAqBA,CAACC,eAAuB;IAC3C,OAAO,IAAI,CAACd,UAAU,CAACG,GAAG,CAAWN,WAAW,CAACO,OAAO,GAAG,wBAAwB,GAAGU,eAAe,CAAC;EACxG;EACAC,MAAMA,CAACN,EAAS;IACd,OAAO,IAAI,CAACT,UAAU,CAACe,MAAM,CAAClB,WAAW,CAACO,OAAO,GAAG,UAAU,GAAGK,EAAE,CAAC;EACtE;EAEAO,oBAAoBA,CAACJ,OAAe;IAClC,OAAO,IAAI,CAACZ,UAAU,CAACG,GAAG,CAAWN,WAAW,CAACO,OAAO,GAAG,wBAAwB,GAAGQ,OAAO,CAAC;EAChG;EAEAK,4BAA4BA,CAACH,eAAuB;IAClD,OAAO,IAAI,CAACd,UAAU,CAACG,GAAG,CAAWN,WAAW,CAACO,OAAO,GAAG,gCAAgC,GAAGU,eAAe,CAAC;EAChH;EAEAI,aAAaA,CAACC,QAA0B;IACtC,OAAO,IAAI,CAACnB,UAAU,CAACU,GAAG,CAAOb,WAAW,CAACO,OAAO,GAAG,UAAU,GAAGe,QAAQ,GAAG,wBAAwB,EAAE,IAAI,CAAC;EAChH;EAEAC,YAAYA,CAACD,QAA0B;IACrC,OAAO,IAAI,CAACnB,UAAU,CAACU,GAAG,CAAOb,WAAW,CAACO,OAAO,GAAG,UAAU,GAAGe,QAAQ,GAAG,uBAAuB,EAAE,IAAI,CAAC;EAC/G;EAEAE,yBAAyBA,CAACT,OAAe;IACvC,OAAO,IAAI,CAACZ,UAAU,CAACG,GAAG,CAASN,WAAW,CAACO,OAAO,GAAG,8BAA8B,GAAGQ,OAAO,CAAC;EACpG;EAGAU,iCAAiCA,CAACR,eAAuB;IACvD;IACA,OAAO,IAAI,CAACd,UAAU,CAACG,GAAG,CAASN,WAAW,CAACO,OAAO,GAAG,sCAAsC,GAAGU,eAAe,CAAC;EACpH;EAAC,QAAAS,CAAA,G;qBAtDUzB,aAAa,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb9B,aAAa;IAAA+B,OAAA,EAAb/B,aAAa,CAAAgC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}