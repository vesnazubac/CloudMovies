{"ast":null,"code":"import { environment } from 'src/env/env';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SocketService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.apiHost + \"socket\";\n    this.restUrl = environment.apiHost + \"/sendMessageRest\";\n  }\n  post(data) {\n    return this.http.post(this.url, data).pipe(map(data => {\n      return data;\n    }));\n  }\n  postRest(data) {\n    return this.http.post(this.restUrl, data).pipe(map(data => {\n      return data;\n    }));\n  }\n  static #_ = this.ɵfac = function SocketService_Factory(t) {\n    return new (t || SocketService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SocketService,\n    factory: SocketService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","map","SocketService","constructor","http","url","apiHost","restUrl","post","data","pipe","postRest","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\USER\\Desktop\\CloudMovies\\front\\FrontMovies\\ProjectApp\\src\\app\\models\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/env/env';\r\nimport { map } from 'rxjs';\r\nimport { Message } from './message.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SocketService {\r\n  url: string = environment.apiHost + \"socket\";\r\n  restUrl:string = environment.apiHost + \"/sendMessageRest\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  post(data: Message) {\r\n    return this.http.post<Message>(this.url, data)\r\n      .pipe(map((data: Message) => { return data; }));\r\n  }\r\n\r\n  postRest(data: Message) {\r\n    return this.http.post<Message>(this.restUrl, data)\r\n      .pipe(map((data: Message) => { return data; }));\r\n  }\r\n}"],"mappings":"AAEA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,QAAQ,MAAM;;;AAM1B,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,GAAG,GAAWL,WAAW,CAACM,OAAO,GAAG,QAAQ;IAC5C,KAAAC,OAAO,GAAUP,WAAW,CAACM,OAAO,GAAG,kBAAkB;EAEjB;EAExCE,IAAIA,CAACC,IAAa;IAChB,OAAO,IAAI,CAACL,IAAI,CAACI,IAAI,CAAU,IAAI,CAACH,GAAG,EAAEI,IAAI,CAAC,CAC3CC,IAAI,CAACT,GAAG,CAAEQ,IAAa,IAAI;MAAG,OAAOA,IAAI;IAAE,CAAC,CAAC,CAAC;EACnD;EAEAE,QAAQA,CAACF,IAAa;IACpB,OAAO,IAAI,CAACL,IAAI,CAACI,IAAI,CAAU,IAAI,CAACD,OAAO,EAAEE,IAAI,CAAC,CAC/CC,IAAI,CAACT,GAAG,CAAEQ,IAAa,IAAI;MAAG,OAAOA,IAAI;IAAE,CAAC,CAAC,CAAC;EACnD;EAAC,QAAAG,CAAA,G;qBAdUV,aAAa,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbf,aAAa;IAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}