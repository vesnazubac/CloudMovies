{"ast":null,"code":"import { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from 'src/app/layout/layout.module';\nimport { FormControl, Validators, FormsModule, ReactiveFormsModule, FormGroup } from '@angular/forms';\nimport { RoleEnum, StatusEnum } from 'src/app/models/userEnums.model';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CommonModule } from '@angular/common';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/user.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/slide-toggle\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/common\";\nfunction EditAccountComponent_div_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditAccountComponent_div_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Input data are not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditAccountComponent {\n  constructor(route, userService, router, snackBar) {\n    this.route = route;\n    this.userService = userService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.color = 'primary';\n    this.disabled = true;\n    this.checked = false;\n    this.reservationRequestNotification = false;\n    this.reservationCancellationNotification = false;\n    this.ownerRatingNotification = false;\n    this.accommodationRatingNotification = false;\n    this.ownerRepliedToRequestNotification = false;\n    this.jwt = \"\";\n    this.editAccountDataForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      phoneNumber: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      address: new FormControl('', Validators.required),\n      username: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required),\n      status: new FormControl(),\n      role: new FormControl('', Validators.required),\n      requestNotification: new FormControl(),\n      cancellationNotification: new FormControl(),\n      accommodationRatingNotification: new FormControl(),\n      ownerRatingNotification: new FormControl(),\n      ownerRepliedNotification: new FormControl()\n    }, {\n      validators: this.passwordMatchValidator\n    });\n    this.hide = true;\n    this.editAccountDataForm.get('requestNotification')?.disable();\n    this.editAccountDataForm.get('cancellationNotification')?.disable();\n    this.editAccountDataForm.get('ownerRatingNotification')?.disable();\n    this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\n    this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\n  }\n  ngOnInit() {\n    const accessToken = localStorage.getItem('user');\n    const helper = new JwtHelperService();\n    const decodedToken = helper.decodeToken(accessToken);\n    if (decodedToken) {\n      this.userService.getById(decodedToken.sub).subscribe(user => {\n        if (user) {\n          console.log('User:', user);\n          this.editAccountDataForm.get('name')?.setValue(user.firstName);\n          this.editAccountDataForm.get('surname')?.setValue(user.lastName);\n          this.editAccountDataForm.get('phoneNumber')?.setValue(user.phoneNumber);\n          this.editAccountDataForm.get('address')?.setValue(user.address);\n          this.editAccountDataForm.get('username')?.setValue(user.username);\n          this.editAccountDataForm.get('password')?.setValue('');\n          this.editAccountDataForm.get('confirmPassword')?.setValue('');\n          this.editAccountDataForm.get('status')?.setValue(user.status);\n          this.editAccountDataForm.get('role')?.setValue(user.role);\n          this.setNotificationControls(user.role);\n        } else {\n          console.error('User not found');\n        }\n      }, error => {\n        console.error('Error fetching user:', error);\n      });\n    } else {\n      console.error('Error decoding JWT token');\n    }\n  }\n  setNotificationControls(role) {\n    if (role === RoleEnum.ADMIN) {\n      this.editAccountDataForm.get('requestNotification')?.disable();\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\n    } else if (role === RoleEnum.GUEST) {\n      this.editAccountDataForm.get('requestNotification')?.disable();\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.enable();\n    } else if (role === RoleEnum.OWNER) {\n      this.editAccountDataForm.get('requestNotification')?.enable();\n      this.editAccountDataForm.get('cancellationNotification')?.enable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.enable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.enable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\n    }\n  }\n  saveChanges() {\n    const userRoleValue = this.editAccountDataForm.get('role')?.value ?? undefined;\n    const userStatusValue = this.editAccountDataForm.get('status')?.value;\n    const userGet = this.userService.getById(this.editAccountDataForm.value.username ?? '');\n    if (userRoleValue !== undefined && userStatusValue !== undefined) {\n      const userRoleEnum = RoleEnum[userRoleValue];\n      const userStatusEnum = StatusEnum[userStatusValue];\n      const changedUser = {\n        firstName: this.editAccountDataForm.value.name ?? '',\n        lastName: this.editAccountDataForm.value.surname ?? '',\n        phoneNumber: this.editAccountDataForm.value.phoneNumber ?? '',\n        address: this.editAccountDataForm.value.address ?? '',\n        password: this.editAccountDataForm.value.password ?? '',\n        passwordConfirmation: this.editAccountDataForm.value.confirmPassword ?? '',\n        status: userStatusEnum,\n        reservationRequestNotification: this.reservationRequestNotification,\n        reservationCancellationNotification: this.reservationCancellationNotification,\n        ownerRatingNotification: this.ownerRatingNotification,\n        accommodationRatingNotification: this.accommodationRatingNotification,\n        ownerRepliedToRequestNotification: this.ownerRepliedToRequestNotification,\n        deleted: false,\n        token: '',\n        favouriteAccommodations: this.user?.favouriteAccommodations\n      };\n      const accessToken = localStorage.getItem('user');\n      const helper = new JwtHelperService();\n      const decodedToken = helper.decodeToken(accessToken);\n      this.userService.update(changedUser, decodedToken.sub).subscribe({\n        next: data => {\n          this.openSnackBar(\"User sucessfully updated!\");\n          this.router.navigate(['home']);\n        }\n      });\n    }\n  }\n  openSnackBar(message) {\n    this.snackBar.open(message, 'OK', {\n      duration: 3000\n    });\n  }\n  delete() {\n    const username = this.editAccountDataForm.value.username ?? '';\n    this.userService.deleteUser(username).subscribe(response => {\n      this.router.navigate(['home']);\n      this.openSnackBar(\"USER SUCCESSFULLY DELETED\");\n    }, error => {\n      console.error('Error deleting user:', error);\n      if (error.error.error) {\n        this.openSnackBar(error.error.error);\n      } else {\n        this.openSnackBar('An error occurred while creating the reservation. Check the number of guests and dates of your reservations');\n      }\n    });\n  }\n  onSlideToggleChangeRequestNotification(event) {\n    const reservationRequestNotificationChecked = event.checked;\n    this.reservationRequestNotification = reservationRequestNotificationChecked.valueOf();\n  }\n  onSlideToggleChangeCancellationNotification(event) {\n    const reservationRequestNotificationChecked = event.checked;\n    this.reservationRequestNotification = reservationRequestNotificationChecked.valueOf();\n  }\n  onSlideToggleChangeOwnerRatingNotification(event) {\n    const ownerRatingNotification = event.checked;\n    this.ownerRatingNotification = ownerRatingNotification.valueOf();\n  }\n  onSlideToggleChangeAccommodationRatingNotification(event) {\n    const accommodationRatingNotification = event.checked;\n    this.accommodationRatingNotification = accommodationRatingNotification.valueOf();\n  }\n  onSlideToggleChangeOwnerRepliedRequestNotification(event) {\n    const ownerRepliedToRequestNotification = event.checked;\n    this.ownerRepliedToRequestNotification = ownerRepliedToRequestNotification.valueOf();\n  }\n  onRoleSelectionChange(event) {\n    const selectedRole = event.source.value;\n    if (selectedRole === 'ADMIN') {\n      this.editAccountDataForm.get('requestNotification')?.disable();\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\n    } else if (selectedRole === 'GUEST') {\n      this.editAccountDataForm.get('requestNotification')?.disable();\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.enable();\n    } else if (selectedRole === 'OWNER') {\n      this.editAccountDataForm.get('requestNotification')?.enable();\n      this.editAccountDataForm.get('cancellationNotification')?.enable();\n      this.editAccountDataForm.get('ownerRatingNotification')?.enable();\n      this.editAccountDataForm.get('accommodationRatingNotification')?.enable();\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\n    }\n  }\n  passwordMatchValidator(control) {\n    const password = control.get('password')?.value;\n    const confirmPassword = control.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : {\n      passwordMismatch: true\n    };\n  }\n  get isFormValid() {\n    return this.editAccountDataForm.valid;\n  }\n  static #_ = this.ɵfac = function EditAccountComponent_Factory(t) {\n    return new (t || EditAccountComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditAccountComponent,\n    selectors: [[\"app-edit-account\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 74,\n    vars: 27,\n    consts: [[2, \"text-align\", \"center\"], [1, \"register-header\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\", \"name\", \"name\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Lastname\", \"formControlName\", \"surname\", \"name\", \"surname\"], [\"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"formControlName\", \"username\", \"name\", \"username\", \"readonly\", \"\"], [\"fxFlex\", \"100%\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"type\"], [\"matInput\", \"\", \"placeholder\", \"Address\", \"formControlName\", \"address\", \"name\", \"address\"], [\"matInput\", \"\", \"placeholder\", \"Phone number\", \"formControlName\", \"phoneNumber\", \"name\", \"phoneNumber\"], [\"appearance\", \"outline\", 1, \"selection-class\"], [\"name\", \"status\", \"formControlName\", \"status\"], [\"value\", \"DEACTIVE\"], [\"value\", \"ACTIVE\"], [1, \"slide-toggle-container\"], [\"formControlName\", \"requestNotification\", \"id\", \"reservationRequestNotificationToggle\", 1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\", \"change\"], [\"formControlName\", \"cancellationNotification\", \"id\", \"cancellationNotification\", 1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\", \"change\"], [\"formControlName\", \"ownerRatingNotification\", \"id\", \"ownerRatingNotificationToggle\", 1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\", \"change\"], [\"formControlName\", \"accommodationRatingNotification\", \"id\", \"accommodationRatingNotificationToggle\", 1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\", \"change\"], [\"formControlName\", \"ownerRepliedNotification\", \"id\", \"ownerRepliedNotification\", 1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\", \"change\"], [1, \"button-container\"], [\"mat-button\", \"\", \"id\", \"saveButton\", 2, \"background-color\", \"#1e88e5\", \"color\", \"white\", \"margin-right\", \"50px\", 3, \"disabled\", \"click\"], [\"mat-fab\", \"\", \"background-color\", \"red\", \"id\", \"deleteButton\", \"aria-label\", \"Example icon button with a delete icon\", 3, \"click\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n    template: function EditAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Edit User Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditAccountComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.saveChanges();\n        });\n        i0.ɵɵelementStart(4, \"p\")(5, \"mat-form-field\", 3);\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"mat-icon\", 5);\n        i0.ɵɵtext(8, \"edit_note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"p\")(10, \"mat-form-field\", 3);\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementStart(12, \"mat-icon\", 5);\n        i0.ɵɵtext(13, \"edit_note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"p\")(15, \"mat-form-field\", 3);\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementStart(17, \"mat-icon\", 5);\n        i0.ɵɵtext(18, \"edit_note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"p\")(20, \"mat-form-field\", 8)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 9);\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function EditAccountComponent_Template_button_click_24_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(25, \"mat-icon\");\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"p\")(28, \"mat-form-field\", 8)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Password confirmation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵelementStart(32, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function EditAccountComponent_Template_button_click_32_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(33, \"mat-icon\");\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(35, \"p\")(36, \"mat-form-field\", 3);\n        i0.ɵɵelement(37, \"input\", 12);\n        i0.ɵɵelementStart(38, \"mat-icon\", 5);\n        i0.ɵɵtext(39, \"edit_note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"p\")(41, \"mat-form-field\", 3);\n        i0.ɵɵelement(42, \"input\", 13);\n        i0.ɵɵelementStart(43, \"mat-icon\", 5);\n        i0.ɵɵtext(44, \"edit_note\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(45, \"p\");\n        i0.ɵɵelementStart(46, \"p\")(47, \"mat-form-field\", 14)(48, \"mat-label\");\n        i0.ɵɵtext(49, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"mat-select\", 15)(51, \"mat-option\", 16);\n        i0.ɵɵtext(52, \"DEACTIVE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-option\", 17);\n        i0.ɵɵtext(54, \"ACTIVE\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(55, \"div\", 18)(56, \"mat-slide-toggle\", 19);\n        i0.ɵɵlistener(\"change\", function EditAccountComponent_Template_mat_slide_toggle_change_56_listener($event) {\n          return ctx.onSlideToggleChangeRequestNotification($event);\n        });\n        i0.ɵɵtext(57, \" Reservation Request Notification On! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"mat-slide-toggle\", 20);\n        i0.ɵɵlistener(\"change\", function EditAccountComponent_Template_mat_slide_toggle_change_58_listener($event) {\n          return ctx.onSlideToggleChangeCancellationNotification($event);\n        });\n        i0.ɵɵtext(59, \" Reservation Cancellation Notification On! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"mat-slide-toggle\", 21);\n        i0.ɵɵlistener(\"change\", function EditAccountComponent_Template_mat_slide_toggle_change_60_listener($event) {\n          return ctx.onSlideToggleChangeOwnerRatingNotification($event);\n        });\n        i0.ɵɵtext(61, \" Owner Rating Notification On!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"mat-slide-toggle\", 22);\n        i0.ɵɵlistener(\"change\", function EditAccountComponent_Template_mat_slide_toggle_change_62_listener($event) {\n          return ctx.onSlideToggleChangeAccommodationRatingNotification($event);\n        });\n        i0.ɵɵtext(63, \" Accommodation Rating Notification On!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"mat-slide-toggle\", 23);\n        i0.ɵɵlistener(\"change\", function EditAccountComponent_Template_mat_slide_toggle_change_64_listener($event) {\n          return ctx.onSlideToggleChangeOwnerRepliedRequestNotification($event);\n        });\n        i0.ɵɵtext(65, \" Owner Replied To Reservation Request Notification On!\\n\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(66, \"div\", 24)(67, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function EditAccountComponent_Template_button_click_67_listener() {\n          return ctx.saveChanges();\n        });\n        i0.ɵɵtext(68, \"Save changes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function EditAccountComponent_Template_button_click_69_listener() {\n          return ctx.delete();\n        });\n        i0.ɵɵelementStart(70, \"mat-icon\");\n        i0.ɵɵtext(71, \"delete\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(72, EditAccountComponent_div_72_Template, 2, 0, \"div\", 27);\n        i0.ɵɵtemplate(73, EditAccountComponent_div_73_Template, 2, 0, \"div\", 27);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.editAccountDataForm);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide.toString());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide.toString());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.editAccountDataForm.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.editAccountDataForm.hasError(\"passwordMismatch\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isFormValid);\n      }\n    },\n    dependencies: [MatFormFieldModule, i4.MatFormField, i4.MatLabel, i4.MatSuffix, MatSelectModule, i5.MatSelect, i6.MatOption, MatInputModule, i7.MatInput, MatIconModule, i8.MatIcon, MatButtonModule, i9.MatButton, i9.MatIconButton, i9.MatFabButton, MatSlideToggleModule, i10.MatSlideToggle, LayoutModule, FormsModule, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.RequiredValidator, ReactiveFormsModule, i11.FormGroupDirective, i11.FormControlName, CommonModule, i12.NgIf],\n    styles: [\"*[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  font-size: medium;\\n}\\n.button-container[_ngcontent-%COMP%] {\\n    margin: 10px; \\n}\\n.register-header[_ngcontent-%COMP%] {\\n  color: #007bff; \\n  font-size: 24px;\\n  margin-bottom: 3%;\\n  margin-top: 5%;\\n}\\n\\n.selection-class[_ngcontent-%COMP%]{\\n  width:250px;\\n}\\n\\n.slide-toggle-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  margin-left:600px;\\n  margin-top: 10px;\\n  gap: 10px; \\n  margin-bottom: 20px;\\n}\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  margin-top: 15px;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudG1hbmFnZW1lbnQvZWRpdC1hY2NvdW50L2VkaXQtYWNjb3VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLGlCQUFpQjtBQUNuQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsU0FBUztFQUNULG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgZm9udC1zaXplOiBtZWRpdW07XHJcbn1cclxuLmJ1dHRvbi1jb250YWluZXIge1xyXG4gICAgbWFyZ2luOiAxMHB4OyBcclxufVxyXG4ucmVnaXN0ZXItaGVhZGVyIHtcclxuICBjb2xvcjogIzAwN2JmZjsgXHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDMlO1xyXG4gIG1hcmdpbi10b3A6IDUlO1xyXG59XHJcblxyXG4uc2VsZWN0aW9uLWNsYXNze1xyXG4gIHdpZHRoOjI1MHB4O1xyXG59XHJcblxyXG4uc2xpZGUtdG9nZ2xlLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIG1hcmdpbi1sZWZ0OjYwMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgZ2FwOiAxMHB4OyBcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbi5lcnJvci1tZXNzYWdlIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbn1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["MatIconModule","MatInputModule","MatFormFieldModule","MatButtonModule","LayoutModule","FormControl","Validators","FormsModule","ReactiveFormsModule","FormGroup","RoleEnum","StatusEnum","MatSelectModule","MatSlideToggleModule","CommonModule","JwtHelperService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","EditAccountComponent","constructor","route","userService","router","snackBar","color","disabled","checked","reservationRequestNotification","reservationCancellationNotification","ownerRatingNotification","accommodationRatingNotification","ownerRepliedToRequestNotification","jwt","editAccountDataForm","name","required","surname","phoneNumber","pattern","address","username","email","password","confirmPassword","status","role","requestNotification","cancellationNotification","ownerRepliedNotification","validators","passwordMatchValidator","hide","get","disable","ngOnInit","accessToken","localStorage","getItem","helper","decodedToken","decodeToken","getById","sub","subscribe","user","console","log","setValue","firstName","lastName","setNotificationControls","error","ADMIN","GUEST","enable","OWNER","saveChanges","userRoleValue","value","undefined","userStatusValue","userGet","userRoleEnum","userStatusEnum","changedUser","passwordConfirmation","deleted","token","favouriteAccommodations","update","next","data","openSnackBar","navigate","message","open","duration","delete","deleteUser","response","onSlideToggleChangeRequestNotification","event","reservationRequestNotificationChecked","valueOf","onSlideToggleChangeCancellationNotification","onSlideToggleChangeOwnerRatingNotification","onSlideToggleChangeAccommodationRatingNotification","onSlideToggleChangeOwnerRepliedRequestNotification","onRoleSelectionChange","selectedRole","source","control","passwordMismatch","isFormValid","valid","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","UserService","Router","i3","MatSnackBar","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","EditAccountComponent_Template","rf","ctx","ɵɵlistener","EditAccountComponent_Template_form_ngSubmit_3_listener","ɵɵelement","EditAccountComponent_Template_button_click_24_listener","EditAccountComponent_Template_button_click_32_listener","EditAccountComponent_Template_mat_slide_toggle_change_56_listener","$event","EditAccountComponent_Template_mat_slide_toggle_change_58_listener","EditAccountComponent_Template_mat_slide_toggle_change_60_listener","EditAccountComponent_Template_mat_slide_toggle_change_62_listener","EditAccountComponent_Template_mat_slide_toggle_change_64_listener","EditAccountComponent_Template_button_click_67_listener","EditAccountComponent_Template_button_click_69_listener","ɵɵtemplate","EditAccountComponent_div_72_Template","EditAccountComponent_div_73_Template","ɵɵadvance","ɵɵproperty","ɵɵattribute","toString","ɵɵtextInterpolate","hasError","i4","MatFormField","MatLabel","MatSuffix","i5","MatSelect","i6","MatOption","i7","MatInput","i8","MatIcon","i9","MatButton","MatIconButton","MatFabButton","i10","MatSlideToggle","i11","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i12","NgIf","styles"],"sources":["C:\\Users\\USER\\Desktop\\FrontMovies\\ProjectApp\\src\\app\\accountmanagement\\edit-account\\edit-account.component.ts","C:\\Users\\USER\\Desktop\\FrontMovies\\ProjectApp\\src\\app\\accountmanagement\\edit-account\\edit-account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { LayoutModule } from 'src/app/layout/layout.module';\r\nimport {FormControl, Validators, FormsModule, ReactiveFormsModule, FormGroup, AbstractControl, ValidationErrors} from '@angular/forms';\r\nimport { UserService } from 'src/app/user.service';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { RoleEnum, StatusEnum } from 'src/app/models/userEnums.model';\r\nimport { UserPutDTO } from 'src/app/models/userPutDTO.model';\r\nimport { User } from 'src/app/models/user.model';\r\nimport {MatSelectChange, MatSelectModule} from '@angular/material/select';\r\nimport { UserGetDTO } from 'src/app/models/userGetDTO.model';\r\nimport {MatSlideToggleChange, MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-edit-account',\r\n  templateUrl: './edit-account.component.html',\r\n  styleUrls: ['./edit-account.component.css'],\r\n  standalone: true,\r\n  imports: [MatFormFieldModule, MatSelectModule,MatInputModule, MatIconModule,MatButtonModule,\r\n    MatSlideToggleModule,LayoutModule,FormsModule, ReactiveFormsModule,CommonModule],\r\n})\r\nexport class EditAccountComponent implements OnInit {\r\n  user:UserGetDTO;\r\n  color: ThemePalette = 'primary';\r\n  disabled=true;\r\n  checked=false;\r\n  reservationRequestNotification:boolean=false;\r\n  reservationCancellationNotification:boolean=false;\r\n  ownerRatingNotification:boolean=false;\r\n  accommodationRatingNotification:boolean=false;\r\n  ownerRepliedToRequestNotification:boolean=false;\r\n  jwt: string = \"\";\r\n\r\n  editAccountDataForm=new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    surname:new FormControl('', Validators.required),\r\n    phoneNumber: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)]),\r\n    address: new FormControl('', Validators.required),\r\n    username: new FormControl('', [Validators.required, Validators.email]),\r\n    password:new FormControl('', Validators.required),\r\n    confirmPassword:new FormControl('', Validators.required),\r\n    status:new FormControl(),\r\n    role:new FormControl('', Validators.required),\r\n    requestNotification:new FormControl(),\r\n    cancellationNotification:new FormControl(),\r\n    accommodationRatingNotification:new FormControl(),\r\n    ownerRatingNotification:new FormControl(),\r\n    ownerRepliedNotification:new FormControl(),\r\n  },\r\n  { validators: this.passwordMatchValidator })\r\n  hide=true;\r\n\r\n  constructor(private route:ActivatedRoute,\r\n    private userService:UserService,private router: Router, private snackBar:MatSnackBar) {\r\n      this.editAccountDataForm.get('requestNotification')?.disable();\r\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\r\n     }\r\n  \r\n  ngOnInit() {\r\n   \r\n    const accessToken: any = localStorage.getItem('user');\r\n    const helper = new JwtHelperService();\r\n    const decodedToken = helper.decodeToken(accessToken);\r\n\r\n    if (decodedToken) {\r\n      this.userService.getById(decodedToken.sub).subscribe(\r\n        (user: UserGetDTO) => {\r\n          if (user) {\r\n            console.log('User:', user);\r\n\r\n            this.editAccountDataForm.get('name')?.setValue(user.firstName);\r\n            this.editAccountDataForm.get('surname')?.setValue(user.lastName);\r\n            this.editAccountDataForm.get('phoneNumber')?.setValue(user.phoneNumber);\r\n            this.editAccountDataForm.get('address')?.setValue(user.address);\r\n            this.editAccountDataForm.get('username')?.setValue(user.username);\r\n            this.editAccountDataForm.get('password')?.setValue('');\r\n            this.editAccountDataForm.get('confirmPassword')?.setValue('');\r\n            this.editAccountDataForm.get('status')?.setValue(user.status);\r\n            this.editAccountDataForm.get('role')?.setValue(user.role);\r\n\r\n            this.setNotificationControls(user.role);\r\n\r\n          } else {\r\n            console.error('User not found');\r\n          }\r\n        },\r\n        error => {\r\n          console.error('Error fetching user:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Error decoding JWT token');\r\n    }\r\n      \r\n    }\r\n\r\n  setNotificationControls(role: RoleEnum): void {\r\n    if (role === RoleEnum.ADMIN) {\r\n      this.editAccountDataForm.get('requestNotification')?.disable();\r\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\r\n    } else if (role === RoleEnum.GUEST) {\r\n      this.editAccountDataForm.get('requestNotification')?.disable();\r\n      this.editAccountDataForm.get('cancellationNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\r\n      this.editAccountDataForm.get('ownerRepliedNotification')?.enable();\r\n    } else if (role === RoleEnum.OWNER) {\r\n      this.editAccountDataForm.get('requestNotification')?.enable();\r\n      this.editAccountDataForm.get('cancellationNotification')?.enable();\r\n      this.editAccountDataForm.get('ownerRatingNotification')?.enable();\r\n      this.editAccountDataForm.get('accommodationRatingNotification')?.enable();\r\n      this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\r\n    }\r\n  }\r\n\r\n  saveChanges(){\r\n  \r\n    const userRoleValue: string | undefined= this.editAccountDataForm.get('role')?.value ?? undefined;\r\n    const userStatusValue: string | undefined= this.editAccountDataForm.get('status')?.value;\r\n    const userGet =this.userService.getById(this.editAccountDataForm.value.username?? '');\r\n\r\n    if(userRoleValue!==undefined && userStatusValue!==undefined){\r\n\r\n      const userRoleEnum: RoleEnum = RoleEnum[userRoleValue as keyof typeof RoleEnum];\r\n      const userStatusEnum: StatusEnum = StatusEnum[userStatusValue as keyof typeof StatusEnum];\r\n      \r\n      const changedUser: UserPutDTO = {\r\n        firstName: this.editAccountDataForm.value.name ?? '',\r\n        lastName:this.editAccountDataForm.value.surname ?? '',\r\n        phoneNumber: this.editAccountDataForm.value.phoneNumber ?? '',\r\n        address: this.editAccountDataForm.value.address ?? '',\r\n        password:this.editAccountDataForm.value.password ?? '',\r\n        passwordConfirmation:this.editAccountDataForm.value.confirmPassword ?? '',\r\n        status:userStatusEnum,\r\n        reservationRequestNotification:this.reservationRequestNotification,\r\n        reservationCancellationNotification:this.reservationCancellationNotification,\r\n        ownerRatingNotification:this.ownerRatingNotification,\r\n        accommodationRatingNotification:this.accommodationRatingNotification,\r\n        ownerRepliedToRequestNotification:this.ownerRepliedToRequestNotification,\r\n        deleted:false,\r\n        token:'',\r\n        favouriteAccommodations:this.user?.favouriteAccommodations\r\n      }\r\n\r\n      const accessToken: any = localStorage.getItem('user');\r\n      const helper = new JwtHelperService();\r\n      const decodedToken = helper.decodeToken(accessToken);\r\n\r\n      this.userService.update(changedUser,decodedToken.sub).subscribe(\r\n        {\r\n          next: (data: User) => {\r\n            this.openSnackBar(\"User sucessfully updated!\");\r\n            this.router.navigate(['home'])\r\n          },\r\n        } \r\n      );\r\n    } \r\n    }\r\n\r\n    openSnackBar(message: string) {\r\n      this.snackBar.open(message, 'OK', {\r\n        duration: 3000,\r\n      });\r\n    }\r\n    \r\n    delete(){\r\n      const username=this.editAccountDataForm.value.username ?? ''\r\n      this.userService.deleteUser(username).subscribe(\r\n        \r\n          (response:any) => {\r\n            this.router.navigate(['home'])\r\n            this.openSnackBar(\"USER SUCCESSFULLY DELETED\");\r\n          },\r\n          \r\n        (error: { error: { error: string; }; }) => {\r\n          console.error('Error deleting user:', error);\r\n          if (error.error.error) {\r\n            this.openSnackBar(error.error.error);\r\n          } else {\r\n            this.openSnackBar('An error occurred while creating the reservation. Check the number of guests and dates of your reservations');\r\n          } \r\n        })\r\n      }\r\n    \r\n\r\n    onSlideToggleChangeRequestNotification(event: MatSlideToggleChange) {\r\n      const reservationRequestNotificationChecked = event.checked;\r\n      this.reservationRequestNotification=reservationRequestNotificationChecked.valueOf();\r\n\r\n    }\r\n    onSlideToggleChangeCancellationNotification(event: MatSlideToggleChange){\r\n      const reservationRequestNotificationChecked = event.checked;\r\n      this.reservationRequestNotification=reservationRequestNotificationChecked.valueOf();\r\n    }\r\n    onSlideToggleChangeOwnerRatingNotification(event:MatSlideToggleChange){\r\n      const ownerRatingNotification = event.checked;\r\n      this.ownerRatingNotification=ownerRatingNotification.valueOf();\r\n    }\r\n    onSlideToggleChangeAccommodationRatingNotification(event:MatSlideToggleChange){\r\n      const accommodationRatingNotification = event.checked;\r\n      this.accommodationRatingNotification=accommodationRatingNotification.valueOf();\r\n    }\r\n    onSlideToggleChangeOwnerRepliedRequestNotification(event:MatSlideToggleChange){\r\n      const ownerRepliedToRequestNotification = event.checked;\r\n      this.ownerRepliedToRequestNotification=ownerRepliedToRequestNotification.valueOf();\r\n    }\r\n\r\n    onRoleSelectionChange(event:MatSelectChange){\r\n      const selectedRole = event.source.value;\r\n      if (selectedRole === 'ADMIN') {\r\n        this.editAccountDataForm.get('requestNotification')?.disable();\r\n        this.editAccountDataForm.get('cancellationNotification')?.disable();\r\n        this.editAccountDataForm.get('ownerRatingNotification')?.disable();\r\n        this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\r\n        this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\r\n      } else if (selectedRole === 'GUEST') {\r\n        this.editAccountDataForm.get('requestNotification')?.disable();\r\n        this.editAccountDataForm.get('cancellationNotification')?.disable();\r\n        this.editAccountDataForm.get('ownerRatingNotification')?.disable();\r\n        this.editAccountDataForm.get('accommodationRatingNotification')?.disable();\r\n        this.editAccountDataForm.get('ownerRepliedNotification')?.enable();\r\n      } else if (selectedRole === 'OWNER') {\r\n        this.editAccountDataForm.get('requestNotification')?.enable();\r\n        this.editAccountDataForm.get('cancellationNotification')?.enable();\r\n        this.editAccountDataForm.get('ownerRatingNotification')?.enable();\r\n        this.editAccountDataForm.get('accommodationRatingNotification')?.enable();\r\n        this.editAccountDataForm.get('ownerRepliedNotification')?.disable();\r\n      }\r\n    }\r\n\r\n    passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\r\n      const password = control.get('password')?.value;\r\n      const confirmPassword = control.get('confirmPassword')?.value;\r\n  \r\n      return password === confirmPassword ? null : { passwordMismatch: true };\r\n    }\r\n  \r\n    get isFormValid(): boolean {\r\n      return this.editAccountDataForm.valid;\r\n  }\r\n}\r\n","<div style=\"text-align: center;\">\r\n<h2 class=\"register-header\">Edit User Account</h2>\r\n<form [formGroup]=\"editAccountDataForm\" (ngSubmit)=\"saveChanges()\" >\r\n<p>\r\n  \r\n    <mat-form-field appearance=\"outline\">\r\n      <input matInput placeholder=\"Name\" formControlName=\"name\" name=\"name\">\r\n      <!-- <mat-error *ngIf=\"editAccountDataForm.get('name')?.hasError('required')\">Name is required</mat-error> -->\r\n      <mat-icon matSuffix>edit_note</mat-icon>\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <input matInput placeholder=\"Lastname\"  formControlName=\"surname\" name=\"surname\">\r\n      <!-- <mat-error *ngIf=\"editAccountDataForm.get('surname')?.hasError('required')\">Surname is required</mat-error> -->\r\n      <mat-icon matSuffix>edit_note</mat-icon>\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <input matInput placeholder=\"pat@example.com\" formControlName=\"username\" name=\"username\" readonly>\r\n      <mat-icon matSuffix>edit_note</mat-icon>\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field fxFlex=\"100%\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" name=\"password\" required>\r\n        <!-- <mat-error *ngIf=\"editAccountDataForm.get('password')?.hasError('required')\" id=\"errorPassword\">Password is required</mat-error> -->\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide.toString()\">\r\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field fxFlex=\"100%\">\r\n        <mat-label>Password confirmation</mat-label>\r\n        <input matInput [type]=\"hide ? 'password' : 'text'\"  formControlName=\"confirmPassword\" name=\"confirmPassword\" required>\r\n        <!-- <mat-error *ngIf=\"editAccountDataForm.get('confirmPassword')?.hasError('required')\" id=\"errorConfirmationPassword\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"editAccountDataForm?.hasError('passwordMismatch')\" id=\"errorPasswordMismatch\">Passwords do not match</mat-error> -->\r\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide.toString()\">\r\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <input matInput placeholder=\"Address\" formControlName=\"address\" name=\"address\">\r\n      <mat-icon matSuffix>edit_note</mat-icon>\r\n    </mat-form-field>\r\n  </p>\r\n  <p>\r\n    <mat-form-field appearance=\"outline\">\r\n      <input matInput placeholder=\"Phone number\" formControlName=\"phoneNumber\" name=\"phoneNumber\">\r\n      <mat-icon matSuffix>edit_note</mat-icon>\r\n    </mat-form-field>\r\n  </p>\r\n<p>\r\n\r\n\r\n<p>\r\n  <mat-form-field  appearance=\"outline\" class=\"selection-class\" >\r\n    <mat-label>Status</mat-label>\r\n    <mat-select name=\"status\" formControlName=\"status\" >\r\n      <mat-option value=\"DEACTIVE\">DEACTIVE</mat-option>\r\n      <mat-option value=\"ACTIVE\">ACTIVE</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  </p>\r\n\r\n\r\n<div class=\"slide-toggle-container\">\r\n\r\n  <mat-slide-toggle formControlName=\"requestNotification\" id=\"reservationRequestNotificationToggle\"\r\n  class=\"example-margin\"\r\n  [color]=\"color\"\r\n  [checked]=\"checked\"\r\n  [disabled]=\"disabled\"\r\n  (change)=\"onSlideToggleChangeRequestNotification($event)\">\r\n  \r\nReservation Request Notification On!\r\n\r\n</mat-slide-toggle>\r\n\r\n  <mat-slide-toggle formControlName=\"cancellationNotification\" id=\"cancellationNotification\"\r\n      class=\"example-margin\"\r\n      [color]=\"color\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"onSlideToggleChangeCancellationNotification($event)\">   \r\n    Reservation Cancellation Notification On!\r\n  </mat-slide-toggle>\r\n  \r\n  <mat-slide-toggle formControlName=\"ownerRatingNotification\" id=\"ownerRatingNotificationToggle\"\r\n  class=\"example-margin\"\r\n  [color]=\"color\"\r\n  [checked]=\"checked\"\r\n  [disabled]=\"disabled\"\r\n  (change)=\"onSlideToggleChangeOwnerRatingNotification($event)\">   \r\nOwner Rating  Notification On!\r\n</mat-slide-toggle>\r\n\r\n  <mat-slide-toggle formControlName=\"accommodationRatingNotification\"  id=\"accommodationRatingNotificationToggle\"\r\n  class=\"example-margin\"\r\n  [color]=\"color\"\r\n  [checked]=\"checked\"\r\n  [disabled]=\"disabled\"\r\n  (change)=\"onSlideToggleChangeAccommodationRatingNotification($event)\">   \r\nAccommodation Rating Notification On!\r\n</mat-slide-toggle>\r\n\r\n<mat-slide-toggle \r\nclass=\"example-margin\" formControlName=\"ownerRepliedNotification\"  id=\"ownerRepliedNotification\"\r\n[color]=\"color\"\r\n[checked]=\"checked\"\r\n[disabled]=\"disabled\"\r\n(change)=\"onSlideToggleChangeOwnerRepliedRequestNotification($event)\">   \r\nOwner Replied To Reservation Request Notification On!\r\n</mat-slide-toggle>\r\n</div>\r\n\r\n</form>\r\n\r\n\r\n<div class=\"button-container\">\r\n    <button mat-button id=\"saveButton\" (click)=\"saveChanges()\" style=\"background-color: #1e88e5; color: white; margin-right: 50px;\"   [disabled]=\"!editAccountDataForm.valid\">Save changes</button>\r\n    <button mat-fab background-color=\"red\" id=\"deleteButton\" (click)=\"delete()\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"editAccountDataForm.hasError('passwordMismatch')\" class=\"error-message\">\r\n    Passwords do not match.\r\n  </div>\r\n  \r\n  <div *ngIf=\"!isFormValid\" class=\"error-message\">\r\n    Input data are not valid!\r\n  </div>\r\n  \r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}