{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../wine.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nexport class CreateWineComponent {\n  constructor(wineService, router) {\n    this.wineService = wineService;\n    this.router = router;\n    this.createWineForm = new FormGroup({\n      name: new FormControl(),\n      year: new FormControl(),\n      grapes: new FormControl(),\n      country: new FormControl(),\n      region: new FormControl('Republika Srbija', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  create() {\n    if (this.createWineForm.valid) {\n      const wine = {\n        name: this.createWineForm.value.name,\n        description: '',\n        year: this.createWineForm.value.year,\n        grapes: this.createWineForm.value.grapes,\n        country: this.createWineForm.value.country,\n        region: this.createWineForm.value.region ?? '',\n        picture: ''\n      };\n      this.wineService.add(wine).subscribe({\n        next: data => {\n          this.router.navigate(['wine']);\n        },\n        error: _ => {}\n      });\n    }\n  }\n  static #_ = this.ɵfac = function CreateWineComponent_Factory(t) {\n    return new (t || CreateWineComponent)(i0.ɵɵdirectiveInject(i1.WineService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateWineComponent,\n    selectors: [[\"app-create-wine\"]],\n    decls: 24,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"year\", \"formControlName\", \"year\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"grapes\", \"formControlName\", \"grapes\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"country\", \"formControlName\", \"country\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"region\", \"formControlName\", \"region\"], [\"id\", \"button\"], [\"color\", \"primary\", \"type\", \"submit\", \"mat-raised-button\", \"\", 3, \"click\"]],\n    template: function CreateWineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\")(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Grapes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-form-field\")(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\")(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 6)(22, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateWineComponent_Template_button_click_22_listener() {\n          return ctx.create();\n        });\n        i0.ɵɵtext(23, \"Create\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.createWineForm);\n      }\n    },\n    dependencies: [i3.MatButton, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 50px\\n}\\n\\n#button[_ngcontent-%COMP%] {\\n  margin-left: 50px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2luZS9jcmVhdGUtd2luZS9jcmVhdGUtd2luZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QjtBQUNGOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1hcmdpbjogNTBweFxyXG59XHJcblxyXG4jYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogNTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","CreateWineComponent","constructor","wineService","router","createWineForm","name","year","grapes","country","region","required","ngOnInit","create","valid","wine","value","description","picture","add","subscribe","next","data","navigate","error","_","i0","ɵɵdirectiveInject","i1","WineService","i2","Router","_2","selectors","decls","vars","consts","template","CreateWineComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CreateWineComponent_Template_button_click_22_listener","ɵɵproperty"],"sources":["C:\\Users\\USER\\Desktop\\Front-end\\ProjectApp\\src\\app\\wine\\create-wine\\create-wine.component.ts","C:\\Users\\USER\\Desktop\\Front-end\\ProjectApp\\src\\app\\wine\\create-wine\\create-wine.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {WineService} from \"../wine.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Wine} from \"../wine/model/wine.model\";\r\n\r\n@Component({\r\n  selector: 'app-create-wine',\r\n  templateUrl: './create-wine.component.html',\r\n  styleUrls: ['./create-wine.component.css']\r\n})\r\nexport class CreateWineComponent {\r\n\r\n  createWineForm = new FormGroup({\r\n    name: new FormControl(),\r\n    year: new FormControl(),\r\n    grapes: new FormControl(),\r\n    country: new FormControl(),\r\n    region: new FormControl('Republika Srbija', [Validators.required]),\r\n  });\r\n\r\n  constructor(private wineService: WineService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  create() {\r\n    if (this.createWineForm.valid) {\r\n      const wine: Wine = {\r\n        name: this.createWineForm.value.name,\r\n        description: '',\r\n        year: this.createWineForm.value.year,\r\n        grapes: this.createWineForm.value.grapes,\r\n        country: this.createWineForm.value.country,\r\n        region: this.createWineForm.value.region ?? '',\r\n        picture: '',\r\n      };\r\n      this.wineService.add(wine).subscribe(\r\n        {\r\n          next: (data: Wine) => {\r\n            this.router.navigate(['wine'])\r\n          },\r\n          error: (_) => {}\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"createWineForm\">\r\n  <mat-form-field>\r\n    <mat-label>Name</mat-label>\r\n    <input matInput type=\"text\" name=\"name\" formControlName=\"name\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Year</mat-label>\r\n    <input matInput type=\"number\" name=\"year\" formControlName=\"year\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Grapes</mat-label>\r\n    <input matInput type=\"text\" name=\"grapes\" formControlName=\"grapes\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Country</mat-label>\r\n    <input matInput type=\"text\" name=\"country\" formControlName=\"country\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Region</mat-label>\r\n    <input matInput type=\"text\" name=\"region\" formControlName=\"region\" />\r\n  </mat-form-field>\r\n</form>\r\n<div id=\"button\">\r\n  <button (click)=\"create()\" color=\"primary\" type=\"submit\" mat-raised-button>Create</button>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}